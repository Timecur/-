写端：
#include <stdio.h>                                                                                                                                                 
#include <unistd.h>
#include <sys/ipc.h>
#include <sys/shm.h>

int CreatShm()
{
    key_t key = ftok("./tmp", 7);
    int shmid = shmget(key, 256, IPC_CREAT | IPC_EXCL | 0755);
    return shmid;

}

int main()
{
    int shmid = CreatShm();
    if(shmid < 0){
        perror("Creat Failed\n");
        return -1;
    }

    char *shmptr = (char *)shmat(shmid, NULL, 0);
    if(shmptr == NULL){
        perror("Shmat Failed\n");
        return -1;
    }

    sprintf(shmptr, "Hello I am Write!\n");
    return 0;
}

读端：
#include <stdio.h>                                                                                                                                                 
#include <string.h>
#include <unistd.h>
#include <sys/ipc.h>
#include <sys/shm.h>

int GetShm()
{
    key_t key = ftok("./tmp", 7);
    int shmid = shmget(key, 256, IPC_EXCL | 0755);
    return shmid;
 
}

int main()
{
    int shmid = GetShm();
    if(shmid < 0){
         perror("Get Failed\n");
        return -1;
    }

    char *shmptr = (char *)shmat(shmid, NULL, 0);
    if(shmptr == NULL){
        perror("Shmat Failed\n");
        return -1;
    }
    
    char buf[100];
    memset(buf, 0, sizeof(buf));
    strncpy(buf, shmptr, 100);
    printf("Read: %s\n", buf);
    return 0;
}  
